/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        key_or_layer: key_or_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_OR_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <38 39>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <16 14 15 13 19 20 21 22>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q            &kp W            &kp E          &kp R              &kp T                    &kp Y                  &kp U              &kp I         &kp O            &kp P               &none
&none  &hrm LEFT_ALT A  &hrm LEFT_WIN S  &hrm LCTRL D   &hrm LEFT_SHIFT F  &kp G                    &kp H                  &hrm LEFT_SHIFT J  &hrm LCTRL K  &hrm LEFT_WIN L  &hrm LEFT_ALT SEMI  &none
&none  &kp Z            &kp X            &kp C          &kp V              &kp B                    &kp N                  &kp M              &kp COMMA     &kp DOT          &kp FSLH            &none
                                         &kp BACKSPACE  &kp ESCAPE         &key_or_layer 1 SPACE    &key_or_layer 2 ENTER  &kp TAB            &kp DELETE
            >;
        };

        num {
            bindings = <
&none  &none         &none          &none         &none         &none               &bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none
&none  &kp NUMBER_1  &kp NUMBER_2   &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5        &kp N6             &kp N7            &kp N8        &kp N9        &kp N0        &none
&none  &none         &kp BACKSLASH  &kp ENTER     &kp MINUS     &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp EQUAL         &kp TILDE     &trans        &kp GRAVE     &none
                                    &trans        &trans        &trans              &trans             &kp SINGLE_QUOTE  &trans
            >;
        };

        nav {
            bindings = <
&none  &none  &none  &none   &none   &none     &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &none  &none
&none  &none  &none  &none   &none   &none     &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &none  &none
&none  &none  &none  &none   &none   &none     &none     &none          &none      &none      &none  &none
                     &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };
    };
};
